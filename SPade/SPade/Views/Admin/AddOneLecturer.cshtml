@using System.Web.Mvc.Html
@model SPade.ViewModels.Admin.AddLecturerViewModel

@{
    ViewBag.Title = "Add Lecturer";
}


@using (Html.BeginForm("AddOneLecturer", "Admin", FormMethod.Post))
{

    <div class="col-md-4 col-md-offset-4 form-horizontal">
        <fieldset>
            @Html.AntiForgeryToken()
            <legend>Add Lecturer</legend>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-12">
                    <label for="inputStaffNo" class="control-label">Staff ID</label>
                    @Html.TextBoxFor(m => m.StaffID, new { @class = "form-control input-md", required = "required" })
                    <span class="help-block">With 's' (e.g. s1234567)</span>
                    <span class="help-block">@Html.ValidationMessage("StaffID", new { @class = "text-danger" })</span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    <label for="inputLecturerName" class="control-label">Lecturer Name</label>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control input-md", required = "required" })
                    <span class="help-block">e.g. John Tan</span>
                    <span class="help-block">@Html.ValidationMessage("Name", new { @class = "text-danger" })</span>

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    <label class="control-label">
                        Assign as Module Coordinator
                    </label>
                    <input class="form-control" id="selectedMC" name="selectedMC" type="text" readonly="readonly" placeholder="Yes/No" data-toggle="modal" data-target="#classModal2" />
                </div>
            </div>

            <div class="form-group" id="selectModule" hidden>
                <div class="col-md-12">
                    <label class="control-label">
                        Assign Module
                    </label>
                    <input class="form-control" id="selectedModule" name="selectedModule" type="text" readonly="readonly" placeholder="Select Module..." data-toggle="modal" data-target="#classModal3" hidden />
                </div>
            </div>

            <!--Classes-->
            <div id="selectClass" class="form-group" hidden>
                <div class="col-md-12">
                    <label class="control-label">
                        Select classes to allocate lecturer to
                    </label>
                    <input class="form-control" id="selectedClasses" name="selectedClasses" type="text" readonly="readonly" placeholder="Select classes..." data-toggle="modal" data-target="#classModal" />
                    <span class="help-block">@Html.ValidationMessage("SelectedClasses", new { @class = "text-danger" })</span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    <label class="control-label">Contact No.</label>
                    @Html.TextBoxFor(m => m.ContactNo, new { @class = "form-control input-md", required = "required" })
                    <span class="help-block">@Html.ValidationMessage("ContactNo", new { @class = "text-danger" })</span>

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    <label for="inputEmail" class="control-label">Email</label>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-md", required = "required" })
                    <span class="help-block">e.g. abc@hotmail.com </span>
                    <span class="help-block">@Html.ValidationMessage("Email", new { @class = "text-danger" })</span>

                </div>
            </div>

            <!--Modal for selecting class-->
            <div name="classModal" id="classModal" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title">Choose classes to allocate assignment to</h4>
                        </div>

                        <div class="modal-body">
                            @{
                                for (var i = 0; i < Model.ClassList.Count(); i++)
                                {
                                    @Html.HiddenFor(m => Model.ClassList[i].ClassId)
                                    @Html.CheckBoxFor(m => Model.ClassList[i].isSelected, new { @id = "cL", @data_class_name = @Model.ClassList[i].ClassName })
                                    @Model.ClassList[i].ClassName
                                    <br />
                                }
                            }
                        </div>
                        <div class="modal-footer">
                            <button name="modalSelect" id="modalSelect" type="button" class="btn btn-default" data-dismiss="modal">Select</button>
                        </div>
                    </div>
                </div>
            </div>

            <!--Modal for assigning module coordinator-->
            <div name="classModal2" id="classModal2" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title">Assign this lecturer as Module Coordinator?</h4>
                        </div>

                        <div class="modal-body">
                            @{
                                @Html.RadioButtonFor(m => m.ModuleCoordinator, true, new { @id = "yesMC", @class = "MC" })
                            }Yes
                            <br />
                            @{
                                @Html.RadioButtonFor(m => m.ModuleCoordinator, false, new { @id = "noMC", @class = "MC" })
                            }No
                            <br />
                        </div>
                        <div class="modal-footer">
                            <button name="modalSelect2" id="modalSelect2" type="button" class="btn btn-default" data-dismiss="modal">Select</button>
                        </div>
                    </div>
                </div>
            </div>

            <!--Modal for selecting module-->
            <div name="classModal3" id="classModal3" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title">Assign module for Module Coordinator</h4>
                        </div>

                        <div class="modal-body">
                            @{
                                for (var i = 0; i < Model.ModuleList.Count(); i++)
                                {
                                    @Html.RadioButtonFor(m => m.ModuleCode, @Model.ModuleList[i].ModuleCode, new { @class = "module", @data_class_name = @Model.ModuleList[i].ModuleName });
                                    @Model.ModuleList[i].ModuleName;
                                    <br />
                                }
                            }
                        </div>
                        <div class="modal-footer">
                            <button name="modalSelect3" id="modalSelect3" type="button" class="btn btn-default" data-dismiss="modal">Select</button>
                        </div>
                    </div>
                </div>
            </div>

            <script>

                $('#modalSelect3').on('click',
                    function () {
                        $('#selectedModule').val($('input[class=module]:checked').data('class-name'));
                    });

                $('#modalSelect2').on('click',
                    function () {

                        var mc = $("input[class='MC']:checked").val();

                        if (mc == "True") {
                            $('#selectedMC').val("Yes");
                            $('#selectClass').hide();
                            $('#selectedClasses').val("");
                            $('#selectModule').show();

                        } else {
                            $('#selectedMC').val("No");
                            $('#selectClass').show();
                            $('#selectModule').hide();
                            $('#selectedModule').val("");

                        }
                    });

                $("#modalSelect").click(function () {
                    var selectedClasses = [];
                    $('input[type="checkbox"][name*="isSelected"]').each(function () {
                        if (this.checked) {
                            var c = $(this).data("class-name");
                            selectedClasses.push(c)
                        }
                    });
                    $("#selectedClasses").val(selectedClasses);
                })
            </script>

            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <a id="btnCancel" href="javascript:history.back()" class="btn btn-default">Cancel</a>
                </div>
            </div>
        </fieldset>
    </div>
                                }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
